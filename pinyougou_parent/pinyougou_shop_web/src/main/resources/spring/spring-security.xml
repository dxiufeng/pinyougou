<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--1配置不被拦截的的资源-->
    <security:http pattern="/*.html" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/js/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>
    <security:http pattern="/seller/add.do" security="none"></security:http>

    <!--2配置基本的拦截规则-->
    <security:http use-expressions="false">
        <security:intercept-url pattern="/**" access="ROLE_SELLER"/> <!--拦截的用户信息-->

        <security:form-login login-page="/shoplogin.html" default-target-url="/admin/index.html"
                             authentication-failure-url="/shoplogin.html" always-use-default-target="true"/><!--登录信息-->

        <security:csrf disabled="true"/><!--关闭csrf防护-->

        <!--允许内置框架页-->
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>


        <!--退出-->
        <security:logout logout-success-url="/shoplogin.html"/>
    </security:http>


    <!--3配置认证管理器..(权限和密码-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--配置验证类-->
    <bean id="userDetailsService" class="com.pinyougou.shop.service.UserDetailsServiceImpl">
        <property name="sellerService" ref="sellerService"></property>
    </bean>
    <!--从dubbo中获取对象注入到sellerService中-->

    <dubbo:application name="pinyougou-shop-web"/>
    <dubbo:registry address="zookeeper://192.168.25.130:2181"/>
    <dubbo:reference interface="com.pinyougou.sellergoods.service.SellerService" id="sellerService"/>


    <!--容器中添加加密类,在认证管理器中引用加密类-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans>